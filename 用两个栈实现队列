题目内容：用两个栈实现一个队列，完成队列的Push和Pop操作。队列中的元素为int类型

算法：栈是先进后出的结构，队列是先进先出的结构，简单的设想一组int类型的数据[1,2,3,4,5]，如果先进入第一个栈,那么第一个栈的内容（从栈顶到栈底）：5,4,3,2,1，再进入第二个栈，第二个栈的内容（从栈顶到栈底）：1,2,3,4,5，现在再出栈的话不就和队列的性质的一样了，如果中途还想有栈加入，那也是一样的道理。下面是牛客网通过代码：
class Solution
{
public:
    void push(int node) {
        stack1.push(node);
    }

    int pop() {
        int a,b,c,d,y;
        if (stack1.empty())
        {
            c=stack2.top();
            stack2.pop();
            return c;
        }
else if(!stack2.empty())
{
    d=stack2.top();
    stack2.pop();
    return d;
}
           while(!stack1.empty())
        {
           a=stack1.top();
               stack2.push(a);
               stack1.pop();
            
        }

       b=stack2.top();
       stack2.pop();
        return b;
    
    }

private:
    int i=87,j=72,l=92;
    stack<int> stack1;
    stack<int> stack2;
};


